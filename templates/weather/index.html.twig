{% extends 'base.html.twig' %}

{% block title %}Weather{% endblock %}

{% block body %}
    <h1>Weather</h1>
    <br>

    <p class="weather-error">
        Need to be logged in to gather weather data!
    </p>

    <div class="weather-input">
        <label>
            Location:<br>
            <input type="text" class="location-input" name="location" value="Riga" autofocus>
        </label>

        <div>
            <label>
                Metric
                <input type="radio" name="units" value="metric" checked>
            </label>
            <label>
                Imperial
                <input type="radio" name="units" value="imperial">
            </label>
        </div>
        <br>

        <div>
            <button class="temperature-button">Temperature</button>
            <button class="average-button">Average Temperature</button>
            <button class="wind-button">Wind</button>
        </div>
        <br>

        <p class="weather-data"></p>
    </div>

    <script>
        $(document).ready(() => {
            const jwtToken = getJwtToken();
            $(".weather-error").css("display", jwtToken ? "none" : "block");
            $(".weather-input").css("display", jwtToken ? "block" : "none");
        });

        const locationInput = $(".location-input");
        const weatherData = $(".weather-data");
        const temperatureButton = $(".temperature-button");
        const averageButton = $(".average-button");
        const windButton = $(".wind-button");

        const getWeatherData = (type) => {
            $.ajax({
                type: "GET",
                url: "{{ path("api_weather") }}",
                contentType: "json",
                headers: {"Authorization": "Bearer " + getJwtToken()},
                data: {
                    location: locationInput.val(),
                    units: $('input[name="units"]:checked').val(),
                },
            })
                .done((data) => {
                    if (data.weather.location === "UNKNOWN") {
                        weatherData.text("Unknown location!");
                        return;
                    }
                    switch (type) {
                        case "temperature":
                            weatherData.text(
                                `Current temperature in ${data.weather.location}: ${data.weather.currentTemperature}`
                            );
                            break;
                        case "average":
                            weatherData.text(
                                `Next 5 day average temperature in ${data.weather.location}: ${data.weather.averageTemperature}`
                            );
                            break;
                        case "wind":
                            weatherData.text(
                                `Wind in ${data.weather.location}: ${data.weather.wind}`
                            );
                    }
                })
                .fail((error) => {
                    if (error.status === 401) {
                        $.ajax({
                            type: "GET",
                            url: "{{ path("gesdinet_jwt_refresh_token") }}",
                            contentType: "json",
                            data: {
                                refresh_token: getRefreshToken(),
                            },
                        })
                            .done((data) => {
                                setJwtToken(data.token);
                                getWeatherData(type);
                            })
                            .fail((error) => {
                                weatherData.text(error.responseJSON.message);
                            });
                    } else {
                        weatherData.text(error.statusText);
                    }
                });
        }

        temperatureButton.click(() => {
            getWeatherData("temperature");
        });
        averageButton.click(() => {
            getWeatherData("average");
        });
        windButton.click(() => {
            getWeatherData("wind");
        });
    </script>
{% endblock %}
